import paho.mqtt.client as mqtt 
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import joblib
import json

broker = 'test.mosquitto.org'
topic = 'INFO4160'

count = 0
lim = 100

df = pd.DataFrame(columns = ['feature 1', 'feature 2', 'label'])

def on_message(client, data, msg):
    global count
    global df

    pl = msg.payload.decode('utf-8')

    df = df.append(data, ignore_index=True)
    count = count + 1

    print(f'Message received: {count}/{lim}')

    if count == lim:
        client.disconnect()

client = mqtt.Client()
client.connect(broker, port=1883)
client.subscribe(topic)
client.on_message = on_message

client.loop_forever()

df.to_csv('mqtt_data.csv', index=False)

X = df[["feature_1", "feature_2"]]
y = df["label"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = DecisionTreeClassifier()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate and print accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy}")

joblib.dump(model, "decision_tree_model.joblib")


'''
a. How did you ensure that your script reads up to 100 data points?
I utilized a global counter variable ("counter") to keep track of the number of received data points. The script subscribes to an MQTT topic and, in the on_message callback, increments the counter for each incoming message. The script continues to read messages until the counter reaches the specified maximum number of data points.

b. What is the role of "payload" in MQTT?
In MQTT, the "payload" is the actual data transmitted in a message. It is the content of the message that carries the information. In this script, the payload is received as a byte sequence and is decoded using UTF-8 encoding to extract the JSON-formatted data. The payload contains the information generated by the publisher, including features and labels.

c. Write a brief paragraph about a real-world application of MQTT:
MQTT (Message Queuing Telemetry Transport) is widely used in the Internet of Things (IoT) for efficient and lightweight communication between devices.
One real-world application is in smart home systems, where various devices such as sensors, actuators, and smart appliances need to exchange information seamlessly. 
MQTT's publish/subscribe model and low overhead make it well-suited for resource-constrained IoT devices.
For example, temperature sensors in different rooms can publish data to an MQTT broker, and HVAC systems can subscribe to the relevant topics to receive and act upon the temperature readings, ensuring effective and responsive climate control in the smart home.


'''
